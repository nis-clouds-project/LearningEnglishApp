using IntegrationWithTelegram.models;
using Telegram.Bot;
using Telegram.Bot.Types.ReplyMarkups;

namespace IntegrationWithTelegram.managers;

/// <summary>
/// –ú–µ–Ω–µ–¥–∂–µ—Ä –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∏ –æ—Ç–ø—Ä–∞–≤–∫–∏ –∫–ª–∞–≤–∏–∞—Ç—É—Ä —Å –∫–Ω–æ–ø–∫–∞–º–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é.
/// </summary>
public static class ButtonPanelManager
{
    /// <summary>
    /// –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –æ—Å–Ω–æ–≤–Ω—ã–º–∏ –¥–µ–π—Å—Ç–≤–∏—è–º–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é.
    /// </summary>
    /// <param name="chatId">ID —á–∞—Ç–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.</param>
    /// <param name="botClient">–ö–ª–∏–µ–Ω—Ç –±–æ—Ç–∞.</param>
    public static async Task SendButtonsToGetAction(long chatId, ITelegramBotClient botClient)
    {
        // –°–æ–∑–¥–∞–µ–º –∫–Ω–æ–ø–∫–∏ –¥–ª—è –æ—Å–Ω–æ–≤–Ω—ã—Ö –¥–µ–π—Å—Ç–≤–∏–π.
        var buttons = new List<KeyboardButton>
        {
            new KeyboardButton("üìö –£—á–∏—Ç—å –ª–µ–∫—Å–∏–∫—É"),
            new KeyboardButton("‚ûï –î–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤–æ–µ —Å–ª–æ–≤–æ –≤ —Å–ª–æ–≤–∞—Ä—å"),
            new KeyboardButton("üî§ –ü—Ä–∞–∫—Ç–∏–∫–∞ –ø–µ—Ä–µ–≤–æ–¥–∞"),
            new KeyboardButton("üîÑ –ü–æ–≤—Ç–æ—Ä–∏—Ç—å –≤—ã—É—á–µ–Ω–Ω—ã–µ —Å–ª–æ–≤–∞")
        };

        // –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –∫–Ω–æ–ø–∫–∞–º–∏.
        var keyboard = new ReplyKeyboardMarkup(buttons)
        {
            ResizeKeyboard = true, // –ö–Ω–æ–ø–∫–∏ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø–æ–¥—Å—Ç—Ä–∞–∏–≤–∞—é—Ç—Å—è –ø–æ–¥ —Ä–∞–∑–º–µ—Ä —ç–∫—Ä–∞–Ω–∞.
            OneTimeKeyboard = true // –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å–∫—Ä—ã–≤–∞–µ—Ç—Å—è –ø–æ—Å–ª–µ –≤—ã–±–æ—Ä–∞.
        };

        // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ "–û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–ø—Ä–æ—Å–∞".
        UserStateManager.SetState(chatId, State.WaitingRequest);

        // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–ª–∞–≤–∏–∞—Ç—É—Ä–æ–π.
        await botClient.SendMessage(chatId, "–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:", replyMarkup: keyboard);
    }

    /// <summary>
    /// –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º–∏ —Å–ª–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é.
    /// –ö–Ω–æ–ø–∫–∏ —Ä–∞—Å–ø—Ä–µ–¥–µ–ª—è—é—Ç—Å—è –ø–æ 4 –≤ —Å—Ç—Ä–æ–∫–µ.
    /// </summary>
    /// <param name="chatId">ID —á–∞—Ç–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.</param>
    /// <param name="botClient">–ö–ª–∏–µ–Ω—Ç –±–æ—Ç–∞.</param>
    public static async Task SendButtonsToGetCategory(long chatId, ITelegramBotClient botClient)
    {
        // –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –∑–Ω–∞—á–µ–Ω–∏—è –ø–µ—Ä–µ—á–∏—Å–ª–µ–Ω–∏—è CategoryType.
        var categories = Enum.GetValues(typeof(CategoryType))
            .Cast<CategoryType>()
            .Select(category => new KeyboardButton(category.ToString()))
            .ToList();

        // –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É "–ó–∞–∫–æ–Ω—á–∏—Ç—å".
        categories.Add(new KeyboardButton("–ó–∞–∫–æ–Ω—á–∏—Ç—å"));

        // –†–∞–∑–±–∏–≤–∞–µ–º –∫–Ω–æ–ø–∫–∏ –Ω–∞ —Å—Ç—Ä–æ–∫–∏ –ø–æ 4 –∫–Ω–æ–ø–∫–∏ –≤ –∫–∞–∂–¥–æ–π.
        var buttonRows = categories
            .Select((button, index) => new { button, index })
            .GroupBy(x => x.index / 4) // –ì—Ä—É–ø–ø–∏—Ä—É–µ–º –ø–æ 4 –∫–Ω–æ–ø–∫–∏ –≤ —Å—Ç—Ä–æ–∫–µ.
            .Select(group => group.Select(x => x.button).ToList())
            .ToList();

        // –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –∫–Ω–æ–ø–∫–∞–º–∏.
        var keyboard = new ReplyKeyboardMarkup(buttonRows)
        {
            ResizeKeyboard = true, // –ö–Ω–æ–ø–∫–∏ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø–æ–¥—Å—Ç—Ä–∞–∏–≤–∞—é—Ç—Å—è –ø–æ–¥ —Ä–∞–∑–º–µ—Ä —ç–∫—Ä–∞–Ω–∞.
            OneTimeKeyboard = true // –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å–∫—Ä—ã–≤–∞–µ—Ç—Å—è –ø–æ—Å–ª–µ –≤—ã–±–æ—Ä–∞.
        };

        // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–ª–∞–≤–∏–∞—Ç—É—Ä–æ–π.
        await botClient.SendMessage(chatId, "–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é:", replyMarkup: keyboard);
    }

    /// <summary>
    /// –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –¥–µ–π—Å—Ç–≤–∏—è–º–∏ –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Å–ª–æ–≤–∞ –≤ —Å–ª–æ–≤–∞—Ä—å.
    /// </summary>
    /// <param name="chatId">ID —á–∞—Ç–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.</param>
    /// <param name="botClient">–ö–ª–∏–µ–Ω—Ç –±–æ—Ç–∞.</param>
    public static async Task SendButtonsAboutAddingWordInVocabulary(long chatId, ITelegramBotClient botClient)
    {
        // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ "–ó–∞–ø—Ä–æ—Å —Å–ª–µ–¥—É—é—â–µ–≥–æ —Å–ª–æ–≤–∞".
        UserStateManager.SetState(chatId, State.LearningWordsAskNext);

        // –°–æ–∑–¥–∞–µ–º –∫–Ω–æ–ø–∫–∏ –¥–ª—è –¥–µ–π—Å—Ç–≤–∏–π.
        var buttons = new List<KeyboardButton>
        {
            new KeyboardButton("–ù–µ –∑–Ω–∞—é"),
            new KeyboardButton("–ó–Ω–∞—é"),
            new KeyboardButton("–ó–∞–∫–æ–Ω—á–∏—Ç—å")
        };

        // –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –∫–Ω–æ–ø–∫–∞–º–∏.
        var keyboard = new ReplyKeyboardMarkup(buttons)
        {
            ResizeKeyboard = true, // –ö–Ω–æ–ø–∫–∏ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø–æ–¥—Å—Ç—Ä–∞–∏–≤–∞—é—Ç—Å—è –ø–æ–¥ —Ä–∞–∑–º–µ—Ä —ç–∫—Ä–∞–Ω–∞.
            OneTimeKeyboard = true // –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å–∫—Ä—ã–≤–∞–µ—Ç—Å—è –ø–æ—Å–ª–µ –≤—ã–±–æ—Ä–∞.
        };

        // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–ª–∞–≤–∏–∞—Ç—É—Ä–æ–π.
        await botClient.SendMessage(chatId, "–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:", replyMarkup: keyboard);
    }
}