version: '3.8'

services:
  postgres:
    image: postgres:16-alpine
    container_name: learning_english_db
    environment:
      POSTGRES_DB: learning_english
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin_password
      POSTGRES_HOST_AUTH_METHOD: trust
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - app_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U admin -d learning_english"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    build:
      context: ./Backend
      dockerfile: Dockerfile
    container_name: learning_english_api
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ConnectionStrings__DefaultConnection=Host=postgres;Port=5432;Database=learning_english;Username=admin;Password=admin_password;Include Error Detail=true;
      - TZ=UTC
      - Logging__LogLevel__Default=Debug
      - Logging__LogLevel__Microsoft.EntityFrameworkCore.Database.Command=Information
    ports:
      - "8000:80"
    networks:
      - app_network
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: learning_english_web
    environment:
      - TZ=UTC
      - BACKEND_URL=http://backend:80
    ports:
      - "3000:80"
    networks:
      - app_network
    depends_on:
      - backend
    restart: unless-stopped

networks:
  app_network:
    driver: bridge

volumes:
  postgres_data: