version: '3.8'

services:
  postgres:
    image: postgres:16-alpine
    container_name: learning_english_db
    environment:
      POSTGRES_DB: learning_english
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin_password
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - app_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U admin -d learning_english"]

  backend:
    build:
      context: ./Backend
      dockerfile: Dockerfile
    image: learning_english_api
    container_name: learning_english_api
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:8000
      - ConnectionStrings__DefaultConnection=Server=postgres;Port=5432;Database=learning_english;User Id=admin;Password=admin_password;
    ports:
      - "8000:8000"
    networks:
      - app_network
    depends_on:
      postgres:
        condition: service_healthy
    entrypoint: []
    command: >
     sh -c "dotnet tool install --global dotnet-ef --version 8.* &&
            dotnet ef database update --project Backend.csproj && 
            dotnet Backend.dll"

  frontend:
    build:
      context: ./Frontend
      dockerfile: Dockerfile
    image: learning_english_web
    container_name: learning_english_web
    environment:
      - TELEGRAM_BOT_TOKEN=${TELEGRAM_BOT_TOKEN}
      - BACKEND_API_URL=http://backend:8000
    env_file:
      - .env
    networks:
      - app_network
    depends_on:
      - backend

networks:
  app_network:
    name: learning_english_network
    driver: bridge

volumes:
  postgres_data:
    name: learning_english_data 